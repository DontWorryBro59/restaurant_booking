from fastapi import APIRouter, Depends, Path

from app.database.database_helper import db_helper
from app.repositories.tables_repo import TableRepo
from app.schemas.additional_sch import MessageSchema
from app.schemas.tables_sch import TableCreate, TableRead

tables_router = APIRouter(tags=["üçΩÔ∏è tables"], prefix="/tables")


@tables_router.get('/')
async def get_all_tables(session=Depends(db_helper.get_session)) -> list[TableRead]:
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç–æ–ª–æ–≤"""
    all_tables = await TableRepo.get_tables(session=session)
    return all_tables


@tables_router.post('/')
async def create_new_table(new_table: TableCreate, session=Depends(db_helper.get_session)) -> MessageSchema:
    message = await TableRepo.create_table(new_table=new_table, session=session)
    return MessageSchema(message=message)


@tables_router.delete('/{id}')
async def delete_table(id: int = Path(..., gt=0, description="ID —Å—Ç–æ–ª–∞, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è"),
                       session=Depends(db_helper.get_session)) -> MessageSchema:
    """–£–¥–∞–ª—è–µ–º —Å—Ç–æ–ª –ø–æ id"""
    message = await TableRepo.delete_table(table_id=id, session=session)
    return MessageSchema(message=message)
